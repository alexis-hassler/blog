<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="fr"><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="fr" /><updated>2017-08-23T00:01:55+02:00</updated><id>http://localhost:4000/</id><title type="html">Bojo Blog</title><subtitle>J'ai créé la société Sewatech en 2005, pour y exercer mon métier de conseil et de formation en informatique. Je suis spécialisé dans les technologies Java (développement et administration de serveurs d'applications).
</subtitle><author><name>Alexis Hassler</name></author><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/08/21/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-08-21T11:02:29+02:00</published><updated>2017-08-21T11:02:29+02:00</updated><id>http://localhost:4000/jekyll/update/2017/08/21/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/08/21/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>Alexis Hassler</name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. To add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: def print_hi(name) puts &quot;Hi, #{name}&quot; end print_hi('Tom') #=&amp;gt; prints 'Hi, Tom' to STDOUT. Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.</summary></entry><entry><title type="html">Vert.X : “Don’t block the event loop”, même en debug ?</title><link href="http://localhost:4000/2017/05/18/vertx-debug.html" rel="alternate" type="text/html" title="Vert.X : &quot;Don’t block the event loop&quot;, même en debug ?" /><published>2017-05-18T08:30:00+02:00</published><updated>2017-05-18T08:30:00+02:00</updated><id>http://localhost:4000/2017/05/18/vertx-debug</id><content type="html" xml:base="http://localhost:4000/2017/05/18/vertx-debug.html">&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
    &lt;a href=&quot;https://4.bp.blogspot.com/-4za2Bjlduqg/WRtjonkZ7VI/AAAAAAAAJF8/7yR9XA3TgTUfEYCxrvDvlyKZlpHNRL5NgCLcB/s1600/vertx-big.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;
        &lt;img border=&quot;0&quot; height=&quot;60&quot; src=&quot;https://4.bp.blogspot.com/-4za2Bjlduqg/WRtjonkZ7VI/AAAAAAAAJF8/7yR9XA3TgTUfEYCxrvDvlyKZlpHNRL5NgCLcB/s200/vertx-big.png&quot; width=&quot;200&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;
Il y a une règle essentielle dans &lt;a href=&quot;http://vertx.io/&quot;&gt;Vert.X&lt;/a&gt;. 
Elle est affichée, répétée dans la documentation, mais elle me gène pour debugger&amp;nbsp;:
&lt;br /&gt;&lt;br /&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;Don’t block the event loop&lt;/b&gt;&lt;/div&gt;
&lt;br /&gt;
Voilà pourquoi, et comment j'ai contourné le problème...
&lt;br /&gt;

&lt;h4&gt;Mes débuts en Vert.X&lt;/h4&gt;

J'ai débuté récemment avec Vert.X 3, après avoir assisté à des conférences de Julien Viet, Clément Escoffier, Julien Ponge et Thomas Segismont. 
Ils sont tous les quatre français et font partie de l'équipe de développement de &lt;b&gt;Vert.X&lt;/b&gt;.
&lt;br /&gt;&lt;br /&gt;
J'ai été convaincu par leurs présentations. 
Si vous voulez jeter un coup d’œil, certaines sont disponibles en vidéo&amp;nbsp;: 
&lt;br /&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://youtu.be/ApGNp4uHKdY&quot;&gt;Microservices réactifs avec Eclipse Vert.x et Kubernetes&lt;/a&gt; (Clement Escoffier) &lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://youtu.be/ZkWsilpiSqw&quot;&gt;Applications réactives avec Eclipse Vert x&lt;/a&gt; (Julien Ponge - Julien Viet) &lt;/li&gt;
&lt;/ul&gt;
&lt;!--more--&gt;
&lt;h4&gt;Non-bloquant&lt;/h4&gt;

Je ne vais pas revenir sur les principes de Vert.X, c'est très bien expliqué dans les vidéos. 
Et je vous renverrai volontiers vers mon wiki sur lequel j'ai consigné mes &lt;a href=&quot;https://www.jtips.info/index.php?title=Cat%C3%A9gorie:Vertx&quot;&gt;notes d'apprentissage de Vert.X&lt;/a&gt;.
&lt;br /&gt;&lt;br /&gt;
Ce qui m'a gêné c'est sa règle d'or&amp;nbsp; :
&lt;br /&gt;&lt;br /&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;
    &lt;b&gt;Don’t block the event loop&lt;/b&gt;
&lt;/div&gt;
&lt;br /&gt;&lt;br /&gt;
Je sais, je l'ai déjà citée, mais ils semblent vraiment y tenir chez Vert.X.
&lt;br /&gt;&lt;br /&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
    &lt;a href=&quot;https://3.bp.blogspot.com/-a88AsA6mLQM/WRtqZ5e_GQI/AAAAAAAAJGE/l3fZ4LWLyKghBMg1s33EeOxdq37fCLhiQCLcB/s1600/dont-block-the-box.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;
        &lt;img border=&quot;0&quot; height=&quot;220&quot; src=&quot;https://3.bp.blogspot.com/-a88AsA6mLQM/WRtqZ5e_GQI/AAAAAAAAJGE/l3fZ4LWLyKghBMg1s33EeOxdq37fCLhiQCLcB/s320/dont-block-the-box.jpg&quot; width=&quot;320&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;br /&gt;
Ça signifie qu'il ne faut pas exécuter d'opération bloquante dans un &lt;i&gt;verticle&lt;/i&gt; classique. 
Tout ce qui peut bloquer un thread sur une durée significative doit être fait dans un &lt;i&gt;worker verticle&lt;/i&gt; ou appelé via &lt;code&gt;vertx.executeBlocking()&lt;/code&gt;.
&lt;br /&gt;

&lt;h4&gt;Significatif ?&lt;/h4&gt;

Pour Vert.X, une durée significative, c'est &lt;b&gt;deux secondes&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://i.imgur.com/gsyznMd.gif&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://i.imgur.com/gsyznMd.gif&quot; height=&quot;216&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;C'est la valeur de la constante &lt;code&gt;DEFAULT_MAX_EVENT_LOOP_EXECUTE_TIME&lt;/code&gt; dans &lt;code&gt;VertxOptions&lt;/code&gt;. Et ça peut être modifié au démarrage.&lt;br /&gt;&lt;h4&gt;Si on dépasse ?&lt;/h4&gt;Si le thread est bloqué plus de deux secondes, on peut avoir une alerte :&lt;br /&gt;&lt;pre class=&quot;brush: bash&quot;&gt;Jan 01, 1970 0:00:00 AM io.vertx.core.impl.BlockedThreadChecker&lt;br /&gt;WARNING: Thread[vert.x-eventloop-thread-2,5,main] has been blocked for 3615 ms,&lt;br /&gt;         time limit is 2000&lt;br /&gt;io.vertx.core.VertxException: Thread blocked&lt;br /&gt;    at ...&lt;br /&gt;&lt;/pre&gt;&lt;h4&gt;How cool is that ?&lt;/h4&gt;Je n'ai rien à redire à ce comportement, sauf en debug. Chaque point d'arrêt va bloquer le thread, et on va avoir une sortie standard polluée par le &lt;code&gt;BlockedThreadChecker&lt;/code&gt;. &lt;br /&gt;&lt;br /&gt;Pour éviter ça, on peut augmenter la valeur de &lt;code&gt;maxEventLoopExecuteTime&lt;/code&gt; ou, mieux encore, augmenter le délai de vérification&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: java&quot;&gt;  vertxOptions.setBlockedThreadCheckInterval(1_000_000L);&lt;br /&gt;&lt;/pre&gt;&lt;h4&gt;Uniquement en debug&lt;/h4&gt;Évidemment, je ne voudrais avoir cette ligne qu'en debug. Pour ça, je peux parcourir les arguments de démarrage et vérifier si &lt;code&gt;-agentlib:jdwp&lt;/code&gt; est présent.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: java&quot;&gt;  if (ManagementFactory.getRuntimeMXBean()&lt;br /&gt;                     .getInputArguments()&lt;br /&gt;                     .stream()&lt;br /&gt;                     .anyMatch(arg -&amp;gt; arg.startsWith(&quot;-agentlib:jdwp&quot;))) {&lt;br /&gt;      vertxOptions.setBlockedThreadCheckInterval(1_000_000L);&lt;br /&gt;  }&lt;/pre&gt;&lt;br /&gt;Comme ça, je peux debugger sans être pollué par les alertes du &lt;code&gt;BlockedThreadChecker&lt;/code&gt;, mais je les conserve en exécution normale.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://data.photofunky.net/output/image/b/5/1/7/b51788/photofunky.gif&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://data.photofunky.net/output/image/b/5/1/7/b51788/photofunky.gif&quot; height=&quot;238&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Evidemment, si vous avez d'autres solutions à proposer, n'hésitez pas à partager.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Edit&lt;/b&gt; (18 mai 2017) &lt;br /&gt;&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot; style=&quot;border-left: solid rgb(238, 238, 238) 5px; padding: 10px;&quot;&gt;&lt;div dir=&quot;ltr&quot; lang=&quot;fr&quot;&gt;&lt;a href=&quot;https://twitter.com/AlexisHassler&quot;&gt;@AlexisHassler&lt;/a&gt; Le vertx maven plugin a un debug goal qui fait ca.&lt;/div&gt;— Clement Escoffier (@clementplop) &lt;a href=&quot;https://twitter.com/clementplop/status/865165827875753985&quot;&gt;May 18, 2017&lt;/a&gt;&lt;/blockquote&gt;&lt;script async=&quot;&quot; charset=&quot;utf-8&quot; src=&quot;//platform.twitter.com/widgets.js&quot;&gt;&lt;/script&gt; Lorsqu'on lance Vert.X en &lt;a href=&quot;https://vmp.fabric8.io/#vertx:debug&quot;&gt;debug avec son plugin&lt;/a&gt;, il met &lt;code&gt;MaxEventLoopExecuteTime&lt;/code&gt; à une valeur très élévée (environs 300 000 ans).</content><author><name>Alexis Hassler</name></author><category term="debug" /><category term="vert.x" /><summary type="html">Il y a une règle essentielle dans Vert.X. Elle est affichée, répétée dans la documentation, mais elle me gène pour debugger&amp;nbsp;: Don’t block the event loop Voilà pourquoi, et comment j'ai contourné le problème... Mes débuts en Vert.X J'ai débuté récemment avec Vert.X 3, après avoir assisté à des conférences de Julien Viet, Clément Escoffier, Julien Ponge et Thomas Segismont. Ils sont tous les quatre français et font partie de l'équipe de développement de Vert.X. J'ai été convaincu par leurs présentations. Si vous voulez jeter un coup d’œil, certaines sont disponibles en vidéo&amp;nbsp;: Microservices réactifs avec Eclipse Vert.x et Kubernetes (Clement Escoffier) Applications réactives avec Eclipse Vert x (Julien Ponge - Julien Viet)</summary></entry><entry><title type="html">Le jour d’après MacBook</title><link href="http://localhost:4000/2017/01/04/le-jour-apres-macbook.html" rel="alternate" type="text/html" title="Le jour d'après MacBook" /><published>2017-01-04T08:16:00+01:00</published><updated>2017-01-04T08:16:00+01:00</updated><id>http://localhost:4000/2017/01/04/le-jour-apres-macbook</id><content type="html" xml:base="http://localhost:4000/2017/01/04/le-jour-apres-macbook.html">&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-of9u_RCKfV4/WGrCzu_XrgI/AAAAAAAAIXg/yf49pRaXd4Ega35ecEIpT-KWsmfhQh5vgCEw/s1600/le_jour_d_apres_tour_eiffel.jpg&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;183&quot; src=&quot;https://3.bp.blogspot.com/-of9u_RCKfV4/WGrCzu_XrgI/AAAAAAAAIXg/yf49pRaXd4Ega35ecEIpT-KWsmfhQh5vgCEw/s200/le_jour_d_apres_tour_eiffel.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;Le mois dernier, j'avais annoncé ma décision de &lt;a href=&quot;https://blog.alexis-hassler.com/2016/12/macbook-cest-fini.html&quot;&gt;remplacer mon &lt;b&gt;Mac Book Pro&lt;/b&gt; par un laptop &lt;b&gt;Linux&lt;/b&gt;&lt;/a&gt;. L'article avait suscité pas mal de réactions, ce qui me fait penser que je ne suis pas le seul à vouloir faire ça. Depuis, j'ai commandé et reçu un Dell Precision 5510.&lt;br /&gt;&lt;br /&gt;Après avoir installé, configuré et testé ma nouvelle machine, je voulais raconter mes premières semaines. Si vous ne voulez pas lire la suite, je résume : ça s'est &lt;strike&gt;parfaitement&lt;/strike&gt; &lt;b&gt;bien passé&lt;/b&gt;. Mais en fait &lt;b&gt;pas tout à fait&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;!--more--&gt;&lt;br /&gt;&lt;h4&gt;Pourquoi un Precision 5510 ?&lt;/h4&gt;Je dois avouer que j'étais perdu face au large choix de laptops. Il y a pas mal de marques qui ont des catalogues indigestes et difficiles à comparer.&lt;br /&gt;&lt;br /&gt;Ensuite, j'ai eu pas mal de bon retours de clients de Dell. Et surtout, ils proposent quelques laptops en &lt;b&gt;Linux&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;Donc &lt;b&gt;Dell&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-9ZnzVVAKvYU/WGrFgoQKoSI/AAAAAAAAIX4/GuhGtwniyaMzZ3rsF3PijiaGdjKYejIfQCEw/s1600/Dell-5510.jpg&quot; imageanchor=&quot;1&quot; style=&quot;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://2.bp.blogspot.com/-9ZnzVVAKvYU/WGrFgoQKoSI/AAAAAAAAIX4/GuhGtwniyaMzZ3rsF3PijiaGdjKYejIfQCEw/s1600/Dell-5510.jpg&quot; /&gt;&lt;/a&gt;La gamme à la mode est celle des XPS. Fins, légers, puissants : ça colle bien pour remplacer un MBP. Malheureusement, seul le XPS 13, avec un écran 13&quot; est proposé avec Linux, le XPS 15 n'est qu'en Windows. Pas grave, le Precision 5510 lui ressemble beaucoup à un prix similaire, et avec de bonnes possibilités de personnalisation.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Donc &lt;b&gt;Precision 5510&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Coté personnalisation, j'ai choisi les caractéristiques suivantes : écran 15.6&quot; en 1920x1080, processeur i7-6820HQ, 32 Go de mémoire, SSD m.2 512 Go. Pour un prix de &lt;b&gt;2800 €&lt;/b&gt;. OK, c'est cher. Presque autant qu'un Mac. C'est quand même mon outil de travail pour les 3 à 5 années qui viennent, et j'espère qu'il tiendra la route sur la durée.&lt;br /&gt;&lt;h4&gt;La commande&lt;/h4&gt;Le site de Dell m'a bien énervé. Il a une ergonomie digne des années 2000.&lt;br /&gt;&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fr&quot; style=&quot;border-left: solid rgb(238, 238, 238) 5px; padding: 10px;&quot;&gt;&lt;img height=&quot;40&quot; src=&quot;https://pbs.twimg.com/media/CzPZsFDWgAAJ2Yg.jpg&quot; width=&quot;640&quot; /&gt;&lt;/blockquote&gt;&lt;br /&gt;Et coté délai, on passe de celui d'expédition (3 à 4 jours) avant la commande, à celui de livraison (2 semaines) une fois la commande passée. &lt;br /&gt;&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;fr&quot; style=&quot;border-left: solid rgb(238, 238, 238) 5px; padding: 10px;&quot;&gt;&lt;div dir=&quot;ltr&quot; lang=&quot;fr&quot;&gt;Et puis délai de livraison de 14 jours, pour une expédition sous 3 à 4 jours. Livré à dos de chèvre ? (&lt;a href=&quot;https://twitter.com/DellEMCFrance&quot;&gt;@DellEMCFrance&lt;/a&gt;) &lt;a href=&quot;https://t.co/cOYYMuI3ty&quot;&gt;pic.twitter.com/cOYYMuI3ty&lt;/a&gt;&lt;/div&gt;— Alexis Hassler (@AlexisHassler) &lt;a href=&quot;https://twitter.com/AlexisHassler/status/807229859512643584&quot;&gt;9 décembre 2016&lt;/a&gt;&lt;/blockquote&gt;&lt;script async=&quot;&quot; charset=&quot;utf-8&quot; src=&quot;//platform.twitter.com/widgets.js&quot;&gt;&lt;/script&gt; Enfin, le suivi du colis du livreur était nul. Comme je risquais d'être absent à la date de livraison, je m'étais abonné au suivi pour pouvoir modifier la date de livraison finale. Problème, le suivi n'a que deux états : &quot;Parti de Chine&quot; et &quot;Livré chez vous&quot;.&lt;br /&gt;&lt;br /&gt;Bon, tout ça n'est pas grave, j'ai mon nouveau jouet.&lt;br /&gt;&lt;h4&gt;L'installation&lt;/h4&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-1h5XwoRmU10/WGrgQO4v2zI/AAAAAAAAIac/fY1T2Knowsg1H3e1hQO_54Y3RYsp_zQoACLcB/s1600/ubuntu.png&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://3.bp.blogspot.com/-1h5XwoRmU10/WGrgQO4v2zI/AAAAAAAAIac/fY1T2Knowsg1H3e1hQO_54Y3RYsp_zQoACLcB/s1600/ubuntu.png&quot; /&gt;&lt;/a&gt;Le laptop est livré avec &lt;b&gt;Ubuntu 14.04&lt;/b&gt;, avec des dépôts spécifiques à Dell, pour avoir les bons drivers. Au premier démarrage, il finalise l'installation.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Première erreur de ma part, j'ai sélectionné le français comme langue d'installation. Ça ne marche tout simplement pas, on a le choix entre plusieurs dizaines de langues, mais il faut choisir l'&lt;b&gt;anglais&lt;/b&gt;.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;br /&gt;Une fois l'obstacle de la langue franchi, l'installation se passe bien. Au bout de quelques minutes j'ai un laptop qui fonctionne parfaitement.&lt;br /&gt;&lt;br /&gt;J'ai particulièrement testé les points suivants : Wi-Fi, Ethernet, Bluetooth, son (haut-parleurs, sortie Jack, micro), sortie vidéo HDMI, Webcam et mise en veille.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://i.ytimg.com/vi/TA5oKsj6_CA/maxresdefault.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;179&quot; src=&quot;https://i.ytimg.com/vi/TA5oKsj6_CA/maxresdefault.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;h4&gt;Les cris et les pleurs&lt;/h4&gt;Tout est OK jusqu'au premier update.&lt;br /&gt;&lt;br /&gt;Un plantage en plein update, suivi de quelques tentatives pour le récupérer et le mener au bout... Le système fonctionne, mais le Wi-Fi est HS. &lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; padding-right: 200px; text-align: center;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;133&quot; src=&quot;https://4.bp.blogspot.com/-DjlTSDiezK4/WGrNK0sBDKI/AAAAAAAAIYU/9rl4zANK4O4ScXqy3Totl1sU0c126K3dACLcB/s200/cri.jpg&quot; width=&quot;200&quot; /&gt;&lt;/div&gt;&lt;br /&gt;Visiblement, je ne suis pas le seul. En parcourant les forums, d'autres on eu des problèmes de wifi, et la solution la plus simple semble être un upgrade vers Ubuntu 16.04.&lt;br /&gt;&lt;br /&gt;Bingo !, le Wi-Fi fonctionne à nouveau...&lt;br /&gt;... mais pas les haut-parleur, ni la sortie jack, ni la webcam, ni le micro intégré.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; padding-left: 200px; text-align: center;&quot;&gt;&lt;a href=&quot;https://www.flickr.com/photos/arwen-abendstern/2100162345&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;133&quot; src=&quot;https://1.bp.blogspot.com/-FkadAGe6l9c/WGrO3Y2VWnI/AAAAAAAAIYg/uQq6h-2FqV02HLWbmcRGhGTTcPSAqXlwACLcB/s200/tears.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;h4&gt;Tout va bien...&lt;/h4&gt;Après quelques heures de tentatives infructueuses, je décide de repartir de zéro et de faire une &lt;b&gt;réinitialisation usine&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;C'était la bonne décision : réinstallation d'Ubuntu 14.04 puis mise à jour, tout va bien. Mais comme ce n'est pas parce que tout va bien qu'il ne faut rien changer, je fais l'upgrade vers &lt;b&gt;Ubuntu 16.04&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;Là aussi, tout va bien, mais je ne m'en rends pas compte tout de suite.&lt;br /&gt;&lt;h4&gt;... ou presque&lt;/h4&gt;En Ubuntu 16.04, tout fonctionne sauf la Webcam et le micro intégré. En réalité, il y a surtout un problème avec les applications par défaut.&lt;br /&gt;&lt;br /&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;float: left; text-align: left;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-AvddwK8daK0/WGrUzCJGkcI/AAAAAAAAIYw/Qo35k6i-xosHnuCF7rwpDWBSD_Bs1n9sACLcB/s1600/digital-webcam.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;112&quot; src=&quot;https://2.bp.blogspot.com/-AvddwK8daK0/WGrUzCJGkcI/AAAAAAAAIYw/Qo35k6i-xosHnuCF7rwpDWBSD_Bs1n9sACLcB/s200/digital-webcam.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Webcam &lt;i&gt;digital&lt;/i&gt;e&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Pour la Webcam, un bug dans l'application Camera, utilisée par défaut, est la cause du dysfonctionnement. En installant une autre application, comme &lt;b&gt;&lt;a href=&quot;https://doc.ubuntu-fr.org/cheese&quot; target=&quot;_blank&quot;&gt;Cheese&lt;/a&gt;&lt;/b&gt;, ça fonctionne.&lt;br /&gt;&lt;br /&gt;Et pour le micro, c'est à peut prêt la même chose, au lieu de l'application Sound, il faut utiliser &lt;b&gt;&lt;a href=&quot;https://doc.ubuntu-fr.org/pavucontrol&quot; target=&quot;_blank&quot;&gt;PulseAudio Volume Control&lt;/a&gt;&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;Donc, contrairement aux apparences, &lt;b&gt;tout fonctionne&lt;/b&gt;. &lt;br /&gt;&lt;h4&gt;Collection d'adaptateurs&lt;/h4&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-8WHbAnnf-uM/WGrbTJSfiYI/AAAAAAAAIaA/E_Rdjkt3s4AU-Z_BbQCi2cfLVPIIjiOlgCLcB/s1600/adaptateurs.jpg&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;141&quot; src=&quot;https://3.bp.blogspot.com/-8WHbAnnf-uM/WGrbTJSfiYI/AAAAAAAAIaA/E_Rdjkt3s4AU-Z_BbQCi2cfLVPIIjiOlgCLcB/s200/adaptateurs.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;Comme sur tout laptop moderne, il faut renouveler sa collection d'adaptateurs.&lt;br /&gt;&lt;br /&gt;Pour le réseau, l'adaptateur &lt;b&gt;USB-C / RJ-45&lt;/b&gt; est fourni et fonctionne bien.&lt;br /&gt;&lt;br /&gt;Pour la vidéo, il y a une prise HDMI. J'ai commandé aussi un adaptateur &lt;b&gt;USB-C / VGA&lt;/b&gt; et ai pu tester un &lt;b&gt;HDMI / VGA&lt;/b&gt;. Aucun problème, la sortie vidéo a marché au premier essai avec mon vidéo-projecteur.&lt;br /&gt;&lt;br /&gt;Il me reste à espérer que ça marche aussi bien chez les clients qui n'auront pas de HDMI.&lt;br /&gt;&lt;h4&gt;Pourvu que ça dure&lt;/h4&gt;Donc tout va bien, malgré quelques frayeurs. Je n'ai pas eu besoin de faire de grosse bidouille ou de recompiler le noyau.&lt;br /&gt;&lt;br /&gt;Pour l'instant je suis satisfait de mon achat.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://m.memegen.com/f6wkc1.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://m.memegen.com/f6wkc1.jpg&quot; height=&quot;320&quot; width=&quot;279&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;</content><author><name>Alexis Hassler</name></author><category term="Linux" /><category term="MacBook Pro" /><category term="Laptop" /><summary type="html">Le mois dernier, j'avais annoncé ma décision de remplacer mon Mac Book Pro par un laptop Linux. L'article avait suscité pas mal de réactions, ce qui me fait penser que je ne suis pas le seul à vouloir faire ça. Depuis, j'ai commandé et reçu un Dell Precision 5510.Après avoir installé, configuré et testé ma nouvelle machine, je voulais raconter mes premières semaines. Si vous ne voulez pas lire la suite, je résume : ça s'est parfaitement bien passé. Mais en fait pas tout à fait.</summary></entry><entry><title type="html">MacBook, c’est fini</title><link href="http://localhost:4000/2016/12/09/macbook-cest-fini.html" rel="alternate" type="text/html" title="MacBook, c'est fini" /><published>2016-12-09T18:53:00+01:00</published><updated>2016-12-09T18:53:00+01:00</updated><id>http://localhost:4000/2016/12/09/macbook-cest-fini</id><content type="html" xml:base="http://localhost:4000/2016/12/09/macbook-cest-fini.html">&lt;h4&gt;Mac c’est has been&lt;/h4&gt;Moi aussi je voulais être à la mode, j’ai donc décider de remplacer mon Mac Book Pro par un laptop &lt;b&gt;Linux&lt;/b&gt;. Par contre, je ne suis sûr d’avoir exactement les mêmes raisons que la vague actuelle.&lt;br /&gt;&lt;h4&gt;Mac et liberté&lt;/h4&gt;D’abord, je dois préciser que je n’ai eu que deux &lt;b&gt;MacBook Pro&lt;/b&gt; dans ma vie. Et que je n’ai jamais idéalisé cette machine. Elle est pratique et efficace pour mon boulot, point.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://www.blogger.com/null&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://upload.wikimedia.org/wikipedia/fr/thumb/1/12/Apple_(flat_design).svg/190px-Apple_(flat_design).svg.png&quot; width=&quot;100&quot; /&gt;&lt;/a&gt;&lt;/div&gt;J’ai toujours été méfiant par rapport à Apple et à ses logiciels. Pour être plus précis, j’ai toujours refusé d’avoir des fichiers dans un format supporté uniquement sur MacOS. Par exemple, je n’ai donc jamais utilisé la suite bureautique d’Apple. J’ai toujours préféré utiliser LibreOffice, même s’il est de moins bonne qualité. Ma liberté est plus importante que ma productivité.&lt;br /&gt;&lt;br /&gt;&lt;!--more--&gt;&lt;br /&gt;&lt;h4&gt;Touch bar bashing&lt;/h4&gt;J’avais pris ma décision avant l’annonce des nouveaux modèles. Rien à voir avec la &lt;i&gt;touch bar&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;Peut-être avec la mémoire : être limité à 16 Go ne me gène pas trop en 2016, mais dans 3 ans, ça risque de faire léger. Pour le reste, la puissance du processeur est bonne (8Mo L3), le SSD en PCIe a l’air rapide. &lt;br /&gt;&lt;h4&gt;&lt;a href=&quot;https://www.blogger.com/null&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;121&quot; src=&quot;https://4.bp.blogspot.com/-YTRtGZSOQBU/WErq2pyCA5I/AAAAAAAAIPc/_lA_k-4Od6Uc_6s6kOSdiMCaMW9hRDRnwCLcB/s200/macbook-pro-2009.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;La rencontre&lt;/h4&gt;L’expérience avec mon 1° MBP était positive. Je précise que ce n’était pas un retina. J’avais pu faire un upgrade de mémoire, et remplacer le HDD par un SSD, tout seul, pour quelques dizaines d'euros. &lt;br /&gt;&lt;h4&gt;Les premiers accrocs&lt;/h4&gt;&lt;a href=&quot;https://www.blogger.com/null&quot; imageanchor=&quot;1&quot; style=&quot;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;146&quot; src=&quot;https://2.bp.blogspot.com/-d8TDqCyb0hw/WErrUtMLKdI/AAAAAAAAIPg/etjzk8JaYtoL0CSEI6qmB0iwPGkeWtcEwCLcB/s200/macbook-pro-2013.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;Pour le 2°, je n’avais plus le choix. Pour du 15&quot;, Apple ne proposait que du retina. Finie, la possibilité d’upgrade. Petite entaille dans ma liberté à disposer de mon laptop. J’ai accepté.&lt;br /&gt;&lt;br /&gt;J’ai commencé à râler après un peu plus que 2 ans 1/2 , quand la &lt;b&gt;batterie&lt;/b&gt; a commencé à déconner. Pas juste tenir moins longtemps hein. Avis de l’atelier Apple : c’est normal qu’après 2 ans, une batterie faiblisse. Bon en 17 ans de laptop, c’est la première qui déconne autant et aussi rapidement. Je dirais pas de chance, il me reste plus qu’à la changer. &lt;br /&gt;&lt;h4&gt;La discorde&lt;/h4&gt;Là aussi, c’est plus le bon vieux MBP où on ouvrait le capot et on remplaçait la vieille batterie par celle commandée sur le web à 50 ou 80 €. Non, maintenant c’est retour à l’atelier et ça coûte &lt;b&gt;plus de 200 €&lt;/b&gt;. OK ça ne fait pas plaisir, mais ce n’est pas complètement étonnant. C’est du Apple.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-INFou4AJEw8/WErsHuFxEHI/AAAAAAAAIPk/7WQRpsPPtMIGNPTkBV5nbzYPexZVZx-JQCLcB/s1600/genius-bar.png&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-INFou4AJEw8/WErsHuFxEHI/AAAAAAAAIPk/7WQRpsPPtMIGNPTkBV5nbzYPexZVZx-JQCLcB/s1600/genius-bar.png&quot; width=&quot;60&quot; /&gt;&lt;/a&gt;&lt;/div&gt;Donc, je prends rendez-vous au Genius Bar. Ça me bouffe une après-midi, pour que le gars me dise que ma batterie est HS et qu’il faut que je prenne rendez-vous (une autre 1/2 journée) pour la changer… et que ça prendra au minimum une semaine. &lt;b&gt;1&amp;nbsp;SEMAINE&lt;/b&gt;. Pas de délai, d’immobilisation.&lt;br /&gt;&lt;br /&gt;Non, là c’est vraiment pas sérieux. Je n'en veux pas au technicien, mais le SAV devrait afficher clairement cette information sur son site web. Et j'en veux surtout à l’ingénieur qui a conçu un tel appareil et qui devrait être pendu par les couilles.&lt;br /&gt;&lt;h4&gt;Le divorce&lt;/h4&gt;Donc au bout de 2 ans 1/2, il est normal de devoir bouffer 3 1/2 journées pour aller au genius bar et leur laisser mon ordi pendant au moins une semaine. Et que ça me coutera 220 €. Et que j’ai juste l’impression de me faire balader.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Donc, voilà. J’ai commandé un nouveau laptop. Sous Linux.&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&amp;nbsp; &lt;/b&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-GXv6OQF9Uho/WErucVWoIdI/AAAAAAAAIPw/IcZYhYFxIMsHnZjwwlx9fTSI-vCZjwKWgCLcB/s1600/linux.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;https://3.bp.blogspot.com/-GXv6OQF9Uho/WErucVWoIdI/AAAAAAAAIPw/IcZYhYFxIMsHnZjwwlx9fTSI-vCZjwKWgCLcB/s200/linux.jpg&quot; width=&quot;180&quot; /&gt;&lt;/a&gt;&lt;/b&gt;&lt;/div&gt;</content><author><name>Alexis Hassler</name></author><category term="Linux" /><category term="Apple" /><category term="MacBook Pro" /><category term="Laptop" /><summary type="html">Mac c’est has beenMoi aussi je voulais être à la mode, j’ai donc décider de remplacer mon Mac Book Pro par un laptop Linux. Par contre, je ne suis sûr d’avoir exactement les mêmes raisons que la vague actuelle.Mac et libertéD’abord, je dois préciser que je n’ai eu que deux MacBook Pro dans ma vie. Et que je n’ai jamais idéalisé cette machine. Elle est pratique et efficace pour mon boulot, point.J’ai toujours été méfiant par rapport à Apple et à ses logiciels. Pour être plus précis, j’ai toujours refusé d’avoir des fichiers dans un format supporté uniquement sur MacOS. Par exemple, je n’ai donc jamais utilisé la suite bureautique d’Apple. J’ai toujours préféré utiliser LibreOffice, même s’il est de moins bonne qualité. Ma liberté est plus importante que ma productivité.</summary></entry><entry><title type="html">Gérer les droits d’accès des administrateurs WildFly avec un annuaire LDAP</title><link href="http://localhost:4000/2016/02/09/wildfly-managment-autorisations-ldap.html" rel="alternate" type="text/html" title="Gérer les droits d'accès des administrateurs WildFly avec un annuaire LDAP" /><published>2016-02-09T08:30:00+01:00</published><updated>2016-02-09T08:30:00+01:00</updated><id>http://localhost:4000/2016/02/09/wildfly-managment-autorisations-ldap</id><content type="html" xml:base="http://localhost:4000/2016/02/09/wildfly-managment-autorisations-ldap.html">&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center; float: right; &quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://3.bp.blogspot.com/-7ss8iLDPwy8/Vq8uvfzL_BI/AAAAAAAAGcA/hAEzJoB0f8o/s1600/wildfly_logomark_150px.png&quot; /&gt;&lt;/div&gt;&lt;p&gt;Dans mon &lt;a href=&quot;/2016/02/wildfly-managment-authentification-ldap.html&quot;&gt;billet précédent&lt;/a&gt;, j'ai montré comment stocker les données d'authentification des administrateurs WildFly dans un annuaire LDAP. La solution n'était pas complète car on ne gérais pas les autorisations. &lt;/p&gt;&lt;p&gt;Pour ça, il faut activer le mode &lt;b&gt;RBAC&lt;/b&gt; et affecter les rôles d'administration aux utilisateurs enregistrés. Pour le billet, on se contentera de deux rôles : celui d'&lt;b&gt;Administrator&lt;/b&gt; qui a un accès en écriture à toutes les informations et celui de &lt;b&gt;Monitor&lt;/b&gt; qui n'a accès qu'en lecture et qui ne peut pas voir les informations sensibles. On commence par les rôles et on activera le RBAC quand tout sera en place. &lt;/p&gt;&lt;!--more--&gt;&lt;p&gt;Les &lt;b&gt;rôles&lt;/b&gt; sont prédéfinis dans WildFly et on peut les affecter aux &lt;b&gt;utilisateurs&lt;/b&gt; : &lt;/p&gt;&lt;pre class=&quot;brush: bash&quot;&gt;&lt;br /&gt;cd /core-service=management/access=authorization&lt;br /&gt;&lt;br /&gt;./role-mapping=Administrator:add&lt;br /&gt;./role-mapping=Administrator/include=hasalex                                      \&lt;br /&gt;                    :add(name=hasalex, type=USER, realm=LdapRealm)&lt;br /&gt;&lt;br /&gt;./role-mapping=Monitor:add&lt;br /&gt;./role-mapping=Monitor/include=momo                                               \&lt;br /&gt;                    :add(name=momo, type=USER, realm=LdapRealm)&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;On pourra utiliser le login &lt;i&gt;hasalex&lt;/i&gt; pour la console d'administration ou &lt;a href=&quot;&quot;&gt;jboss-cli&lt;/a&gt;, et on utilisera &lt;i&gt;momo&lt;/i&gt; pour le monitoring. Par contre, l'affectation des rôles se fait utilisateur par utilisateur ce qui est fastidieux si leur nombre augmente. Ce serait beacoup plus pratique d'exploiter les groupes LDAP. On va donc ignorer les role-mapping de type USER et faire comme si on n'avait jamais passé ces quatre commandes. &lt;/p&gt;&lt;p&gt;Du coté de l'annuaire LDAP, on va rechercher les &lt;b&gt;groupes&lt;/b&gt; dont l'utilisateur est membre : &lt;/p&gt;&lt;pre class=&quot;brush: bash&quot;&gt;&lt;br /&gt;cd /core-service=management/security-realm=LdapRealm&lt;br /&gt;batch&lt;br /&gt;./authorization=ldap:add(connection=&quot;LdapConnection&quot;)&lt;br /&gt;./authorization=ldap/group-search=group-to-principal                              \&lt;br /&gt;                    :add(group-name=SIMPLE, group-name-attribute=cn,              \&lt;br /&gt;                         base-dn=&quot;ou=groups,dc=sewatech,dc=fr&quot;, recursive=true,   \&lt;br /&gt;                         search-by=DISTINGUISHED_NAME,                            \&lt;br /&gt;                         principal-attribute=uniqueMember)&lt;br /&gt;run-batch&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;Par rapport à nos &lt;a href=&quot;https://gist.github.com/hasalex/a5ffd764485540c4fdff&quot;&gt;données&lt;/a&gt;, l'utilisateur &lt;i&gt;hasalex&lt;/i&gt; fait partie du groupe &lt;i&gt;as-admin&lt;/i&gt; et &lt;i&gt;momo&lt;/i&gt; fait partie de &lt;i&gt;as-mon&lt;/i&gt;. Ça ne représente pas encore des rôles reconnus par WildFly, il faut associer ces groupes aux rôles prédéfinis : &lt;/p&gt;&lt;pre class=&quot;brush: bash&quot;&gt;&lt;br /&gt;cd /core-service=management/access=authorization&lt;br /&gt;&lt;br /&gt;./role-mapping=Administrator:add&lt;br /&gt;./role-mapping=Administrator/include=app-admin                                   \&lt;br /&gt;                    :add(type=GROUP, realm=LdapRealm)&lt;br /&gt;&lt;br /&gt;./role-mapping=Monitor:add&lt;br /&gt;./role-mapping=Monitor/include=app-mon                                           \&lt;br /&gt;                    :add(type=GROUP, realm=LdapRealm)&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;Maintenant qu'on a configuré la recherche des utilisateurs et l'association des groupes aux rôles WildFly, on peut passer en mode RBAC. &lt;/p&gt;&lt;pre class=&quot;brush: bash&quot;&gt;&lt;br /&gt;/core-service=management/access=authorization                                    \&lt;br /&gt;                    :write-attribute(name=provider,value=rbac)&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;Ça y est, chacun est dans son rôle et nos informations sont bien gardées. Si on a conservé l'authentification locale automatique, ce mode de connexion donne le rôle SuperUser qui a encore un peu plus de droits qu'Administrator. &lt;/p&gt;</content><author><name>Alexis Hassler</name></author><category term="WildFly" /><category term="LDAP" /><summary type="html">Dans mon billet précédent, j'ai montré comment stocker les données d'authentification des administrateurs WildFly dans un annuaire LDAP. La solution n'était pas complète car on ne gérais pas les autorisations. Pour ça, il faut activer le mode RBAC et affecter les rôles d'administration aux utilisateurs enregistrés. Pour le billet, on se contentera de deux rôles : celui d'Administrator qui a un accès en écriture à toutes les informations et celui de Monitor qui n'a accès qu'en lecture et qui ne peut pas voir les informations sensibles. On commence par les rôles et on activera le RBAC quand tout sera en place.</summary></entry><entry><title type="html">Utiliser un annuaire LDAP pour l’authentification des administrateurs WildFly</title><link href="http://localhost:4000/2016/02/01/wildfly-managment-authentification-ldap.html" rel="alternate" type="text/html" title="Utiliser un annuaire LDAP pour l'authentification des administrateurs WildFly" /><published>2016-02-01T10:51:00+01:00</published><updated>2016-02-01T10:51:00+01:00</updated><id>http://localhost:4000/2016/02/01/wildfly-managment-authentification-ldap</id><content type="html" xml:base="http://localhost:4000/2016/02/01/wildfly-managment-authentification-ldap.html">&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center; float: right; &quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://3.bp.blogspot.com/-7ss8iLDPwy8/Vq8uvfzL_BI/AAAAAAAAGcA/hAEzJoB0f8o/s1600/wildfly_logomark_150px.png&quot; /&gt;&lt;/div&gt;&lt;p&gt;En 2013, j'avais écrit un billet sur l'&lt;a href=&quot;https://blog.alexis-hassler.com/2013/06/authentification-wildfly-avec-opendj.html&quot; target=&quot;_blank&quot;&gt;authentification &lt;b&gt;WildFly&lt;/b&gt; avec OpenDJ&lt;/a&gt;. Ça concernait exclusivement l'authentification et les autorisations pour les applications déployées, avec la mise en place d'un security-domain, dans le subsystem security. Dans cet article, je vais mettre en place l'&lt;b&gt;authentification LDAP&lt;/b&gt; pour les outils de gestion (console d'administration, &lt;a href=&quot;https://www.jtips.info/index.php?title=WildFly/cli&quot;&gt;jboss-cli&lt;/a&gt;,...).&lt;/p&gt;&lt;p&gt;Comme la dernière fois, j'utilise OpenDJ en version 3.0, et j'ai repris le LDIF en changeant les groupes, pour leur donner des noms plus orientés administration (admin et monitor). Ceci dit, on verra que dans un premier temps, ces groupes sont inutiles...&lt;/p&gt;&lt;!--more--&gt;&lt;p&gt;Par défaut, la sécurité d'accès au management utilise le ManagementRealm qui stocke les identités de ses utilisateurs dans le fichier standalone/configuration/mgmt-users.properties. Ça fait l'affaire pour quelques utilisateurs et quelques instances de WildFly, mais ce n'est pas très organisé pour une montée en volume. L'annuaire LDAP offre l'avantage d'une centralisation des données.&lt;/p&gt;&lt;p&gt;Je passe à nouveau l'installation d'&lt;b&gt;OpenDJ&lt;/b&gt;, car je n'ai pas grand chose d'intéressant à raconter sur le sujet. J'importe les données d'utilisateurs au format LDIF, avec les groupes d'admin, que j'ai exportées sur &lt;a href=&quot;https://gist.github.com/hasalex/a5ffd764485540c4fdff&quot; target=&quot;_blank&quot;&gt;gist&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;Je suis parti d'un &lt;b&gt;WildFly 10.0.0.Final&lt;/b&gt;, dans sa configuration par défaut. J'ai configuré la connexion à l'annuaire, le LdapRealm et j'ai basculé l'interface de management vers ce nouveau realm. Comme l'XML, c'est compliqué, je fais tout ça en ligne de commande avec &lt;b&gt;jboss-cli&lt;/b&gt;. &lt;/p&gt;&lt;p&gt;Pour la &lt;b&gt;connexion à l'annuaire&lt;/b&gt; : &lt;/p&gt;&lt;pre class=&quot;brush: bash&quot;&gt;/core-service=management/ldap-connection=LdapConnection:add(                       \&lt;br /&gt;                    url=&quot;ldap://localhost:1389&quot;)      &lt;br /&gt;&lt;/pre&gt;&lt;p&gt;Pour la &lt;b&gt;création du realm&lt;/b&gt; : &lt;/p&gt;&lt;pre class=&quot;brush: bash&quot;&gt;/core-service=management/security-realm=LdapRealm:add()&lt;br /&gt;/core-service=management/security-realm=LdapRealm/authentication=ldap:add(         \&lt;br /&gt;                    base-dn=&quot;ou=people,dc=sewatech,dc=fr&quot;,                         \&lt;br /&gt;                    username-attribute=&quot;uid&quot;,                                      \&lt;br /&gt;                    connection=&quot;LdapConnection&quot;)&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;Pour l'&lt;b&gt;utilisation du nouveau realm&lt;/b&gt; par l'interface de management : &lt;/p&gt;&lt;pre class=&quot;brush: bash&quot;&gt;/core-service=management/management-interface=http-interface:write-attribute(      \&lt;br /&gt;                    name=security-realm,                                           \&lt;br /&gt;                    value=LdapRealm)&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;Dorénavant, je peux me connecter aux outils d'administration (console d'administration, jboss-cli) avec le login hasalex. C'est aussi valable pour les API (http, java) et pour JMX. Attention, avec le LdapRealm, il faut aussi s'authentifier pour les connexions locales car je n'ai pas repris l'&lt;b&gt;authentification locale&lt;/b&gt; automatique. J'aurais pu le faire avec cette commande : &lt;/p&gt;&lt;pre class=&quot;brush: bash&quot;&gt;/core-service=management/security-realm=LdapRealm/authentication=local:add(        \&lt;br /&gt;                    default-user=&quot;$local&quot;,                                         \&lt;br /&gt;                    skip-group-loading=true)&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;On notera que le mode d'authentification a changé. Avec le fichier properties, on était en DIGEST, avec LDAP on est passé en BASIC, qui est moins sécurisé et qui vous poussera probablement à passer en SSL. &lt;/p&gt;&lt;p&gt;Enfin, comme pour l'authentification par fichier properties, tous les utilisateurs présents dans la branche LDAP sont autorisés à se connecter et ont tous les droits sur notre WildFly. Pour restreindre les autorisations, il faudra passer en &lt;b&gt;RBAC&lt;/b&gt;, et c'est le sujet du prochain billet. &lt;/p&gt;&lt;p&gt;Edit : sur les conseils d'Emmanuel Lecharny, j'ai retiré les attributs search-dn et search-credential de la connexion, le binding se fait alors avec les informations de l'utilisateur ; ainsi on ne stocke plus de mot de passe LDAP dans la configuration. &lt;/p&gt;</content><author><name>Alexis Hassler</name></author><category term="WildFly" /><category term="LDAP" /><summary type="html">En 2013, j'avais écrit un billet sur l'authentification WildFly avec OpenDJ. Ça concernait exclusivement l'authentification et les autorisations pour les applications déployées, avec la mise en place d'un security-domain, dans le subsystem security. Dans cet article, je vais mettre en place l'authentification LDAP pour les outils de gestion (console d'administration, jboss-cli,...).Comme la dernière fois, j'utilise OpenDJ en version 3.0, et j'ai repris le LDIF en changeant les groupes, pour leur donner des noms plus orientés administration (admin et monitor). Ceci dit, on verra que dans un premier temps, ces groupes sont inutiles...</summary></entry><entry><title type="html">Authentification Digest et chiffrement des mots de passe, avec Tomcat Realm</title><link href="http://localhost:4000/2015/10/26/tomcat-realm-digest.html" rel="alternate" type="text/html" title="Authentification Digest et chiffrement des mots de passe, avec Tomcat Realm" /><published>2015-10-26T08:30:00+01:00</published><updated>2015-10-26T08:30:00+01:00</updated><id>http://localhost:4000/2015/10/26/tomcat-realm-digest</id><content type="html" xml:base="http://localhost:4000/2015/10/26/tomcat-realm-digest.html">&lt;a href=&quot;https://images-blogger-opensocial.googleusercontent.com/gadgets/proxy?url=http%3A%2F%2Ftomcat.apache.org%2Fimages%2Ftomcat.png&amp;amp;container=blogger&amp;amp;gadget=a&amp;amp;rewriteMime=image%2F*&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;//tomcat.apache.org/images/tomcat.png&quot; /&gt;&lt;/a&gt;Le mois dernier, j'avais écrit un billet sur l'&lt;a href=&quot;https://blog.alexis-hassler.com/2015/10/spring-boot-digest.html&quot; target=&quot;_blank&quot;&gt;authentification Digest et le chiffrement des mots de passe, avec Spring Security&lt;/a&gt;. Aujourd'hui je me pose la même question, mais avec une configuration de Realm sous Tomcat 8. &lt;div&gt;Comment peux-t-on associer une authentification Digest avec le hachage des mots de passe ? Nous verrons d'ailleurs que la réponse n'est pas la même pour tous les realms de Tomcat. &lt;/div&gt;&lt;!--more--&gt;&lt;h4&gt;Tomcat Realm&lt;/h4&gt;&lt;div&gt;Sous &lt;a href=&quot;http://tomcat.apache.org/&quot; target=&quot;_blank&quot;&gt;Tomcat&lt;/a&gt;, on configure des &lt;a href=&quot;https://tomcat.apache.org/tomcat-8.0-doc/realm-howto.html&quot; target=&quot;_blank&quot;&gt;Realms&lt;/a&gt; qui accèdent à des sources de données pour valider le nom d'utilisateur et le mot de passe, ainsi que pour attribuer un ou plusieurs rôles à l'utilisateur authentifié. Par exemple, dans la configuration par défaut, on a le UserDatabaseRealm qui utilise les données stockées dans le fichier conf/tomcat-users.xml. &lt;/div&gt;&lt;pre class=&quot;brush:xml&quot;&gt;&amp;lt;tomcat-users&amp;gt;&lt;br /&gt;  &amp;lt;user username=&quot;myuser&quot; &lt;br /&gt;        password=&quot;ceaf8439...$1$61057e0429b934189c46ea23c9f23...&quot; &lt;br /&gt;        roles=&quot;myrole&quot; /&amp;gt;&lt;br /&gt;&amp;lt;/tomcat-users&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;En ajoutant l'attribut digest à la configuration du Realm, on peut lui dire que le mot de passe est haché. &lt;/div&gt;&lt;pre class=&quot;brush:xml&quot;&gt;&amp;lt;realm classname=&quot;org.apache.catalina.realm.UserDatabaseRealm&quot; &lt;br /&gt;       resourceName=&quot;UserDatabase&quot; digest=&quot;sha-512&quot; /&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Tomcat fournit même le script bin/digest.sh pour hacher nos mots de passe. &lt;/div&gt;&lt;pre class=&quot;brush:bash&quot;&gt;$CATALINA_HOME/bin/digest.sh -a sha-512 mypwd&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;h4&gt;CredentialHandler vs digest&lt;/h4&gt;Dans cet exemple, j'ai utilisé l'ancien format de configuration. Celui-ci est valable jusqu'à Tomcat 7, mais est déprécié dans Tomcat 8 et devrait être retiré de Tomcat 9. Pour préparer l'avenir, je préfère le nouveau format, avec un CredentialHandler. L'appel du script digest.sh et le format de stockage du user n'ont pas changé. &lt;/div&gt;&lt;pre class=&quot;brush:xml&quot;&gt;&amp;lt;realm classname=&quot;org.apache.catalina.realm.UserDatabaseRealm&quot; &lt;br /&gt;       resourceName=&quot;UserDatabase&quot; &amp;gt;&lt;br /&gt;  &amp;lt;credentialhandler&amp;nbsp;&lt;br /&gt;         className=&quot;org.apache.catalina.realm.MessageDigestCredentialHandler&quot;&amp;nbsp;&lt;br /&gt;         algorithm=&quot;sha-512&quot; /&amp;gt;&lt;br /&gt;&amp;lt;/realm&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;h4&gt;Authentification HTTP Digest&lt;/h4&gt;&lt;div&gt;Cette façon de stocker le mot de passe fonctionne bien si mon application est en authentification Basic ou par formulaire, mais ne marche pas en Digest. Pour la rendre compatible en Digest, il faut que passer en algorithme MD5 et hacher la concaténation du username, du realm name de l'application et du mot de passe (username:realm:password).  &lt;/div&gt;&lt;div&gt;Pour l'application manager, on commence par exécuter ce script : &lt;/div&gt;&lt;pre class=&quot;brush:bash&quot;&gt;bin/digest.sh -a md5 -s 0 admin:Tomcat\ Manager\ Application:admpwd&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Puis on enregistre le résultat dans le fichier &lt;b&gt;tomcat-users.xml&lt;/b&gt; : &lt;/div&gt;&lt;pre class=&quot;brush:xml&quot;&gt;&amp;lt;tomcat-users&amp;gt;&lt;br /&gt;  &amp;lt;user username=&quot;myuser&quot; &lt;br /&gt;        password=&quot;62c6ce725d29073d5a8affb1820c4a59&quot; &lt;br /&gt;        roles=&quot;manager-gui&quot;/&amp;gt;&lt;br /&gt;&amp;lt;/tomcat-users&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Enfin, on ajoute le &lt;b&gt;MD5&lt;/b&gt; au realm : &lt;/div&gt;&lt;pre class=&quot;brush:xml&quot;&gt;&amp;lt;realm classname=&quot;org.apache.catalina.realm.UserDatabaseRealm&quot; &lt;br /&gt;       resourceName=&quot;UserDatabase&quot; &amp;gt;&lt;br /&gt;  &amp;lt;credentialhandler &lt;br /&gt;         className=&quot;org.apache.catalina.realm.MessageDigestCredentialHandler&quot; &lt;br /&gt;         algorithm=&quot;md5&quot; /&amp;gt;&lt;br /&gt;&amp;lt;/realm&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;h4&gt;DatasourceRealm&lt;/h4&gt;&lt;div&gt;Évidemment, ça fonctionne avec d'autres realms, comme le &lt;a href=&quot;https://tomcat.apache.org/tomcat-8.0-doc/config/realm.html#DataSource_Database_Realm_-_org.apache.catalina.realm.DataSourceRealm&quot; target=&quot;_blank&quot;&gt;DataSourceRealm&lt;span id=&quot;goog_551274344&quot;&gt;&lt;/span&gt;&lt;span id=&quot;goog_551274345&quot;&gt;&lt;/span&gt;&lt;/a&gt; qui cherche les informations en base de données. Je le configure de la même façon que pour stocker les mots de passe en clair, avec le CredentialHandler &lt;b&gt;MD5&lt;/b&gt; en plus. &lt;/div&gt;&lt;pre class=&quot;brush:xml&quot;&gt;&amp;lt;Realm className=&quot;org.apache.catalina.realm.DataSourceRealm&quot;&lt;br /&gt;       dataSourceName=&quot;jdbc/sewa-global-ds&quot;&lt;br /&gt;       userTable=&quot;SW_USERS&quot; userNameCol=&quot;USERID&quot; userCredCol=&quot;PASSWD&quot;&lt;br /&gt;       userRoleTable=&quot;SW_ROLES&quot; roleNameCol=&quot;ROLEID&quot;/&amp;gt;&lt;br /&gt;  &amp;lt;CredentialHandler &lt;br /&gt;         className=&quot;org.apache.catalina.realm.MessageDigestCredentialHandler&quot; &lt;br /&gt;         algorithm=&quot;md5&quot; /&amp;gt;&lt;br /&gt;&amp;lt;/realm&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;On doit ensuite enregistrer le hash dans la colonne PASSWD : &lt;/div&gt;&lt;pre class=&quot;brush:sql&quot;&gt;INSERT INTO SW_USERS (USERID, PASSWD) &lt;br /&gt;    VALUES ('myuser', '62c6ce725d29073d5a8affb1820c4a59');&lt;br /&gt;&lt;/pre&gt;&lt;h4&gt;JNDIRealm&lt;/h4&gt;&lt;div&gt;Malheureusement, ce qu'on vient de voir ne marche pas avec le &lt;a href=&quot;https://tomcat.apache.org/tomcat-8.0-doc/config/realm.html#JNDI_Directory_Realm_-_org.apache.catalina.realm.JNDIRealm&quot; target=&quot;_blank&quot;&gt;JNDIRealm&lt;/a&gt; qui valide les authentifications auprès d'un annuaire LDAP. Mais ça, il faudrait que j'en parle dans un autre billeT. &lt;b&gt;A SUIVRE...&lt;/b&gt;&lt;/div&gt;</content><author><name>Alexis Hassler</name></author><category term="Digest" /><category term="Tomcat" /><category term="Realm" /><summary type="html">Le mois dernier, j'avais écrit un billet sur l'authentification Digest et le chiffrement des mots de passe, avec Spring Security. Aujourd'hui je me pose la même question, mais avec une configuration de Realm sous Tomcat 8. Comment peux-t-on associer une authentification Digest avec le hachage des mots de passe ? Nous verrons d'ailleurs que la réponse n'est pas la même pour tous les realms de Tomcat.</summary></entry><entry><title type="html">Adieu boot2docker, bonjour docker-machine</title><link href="http://localhost:4000/2015/10/12/docker-machine-sur-macos.html" rel="alternate" type="text/html" title="Adieu boot2docker, bonjour docker-machine" /><published>2015-10-12T09:30:00+02:00</published><updated>2015-10-12T09:30:00+02:00</updated><id>http://localhost:4000/2015/10/12/docker-machine-sur-macos</id><content type="html" xml:base="http://localhost:4000/2015/10/12/docker-machine-sur-macos.html">&lt;div&gt;Eh oui, &lt;b&gt;boot2docker&lt;/b&gt;, c'est fini. C'était sympa, tu m'as permis d'utiliser Docker là où ce n'était pas permis. Mais maintenant, tu dois laisser ta place à &lt;b&gt;Docker Machine&lt;/b&gt;.&lt;span style=&quot;color: purple;&quot;&gt;&lt;i&gt; Voilà, c'est fini. Ne sois jamais amère, reste toujours sincère. T'as eu c'que t'as voulu, même si t'as pas voulu c'que t'as eu.&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;&lt;!--more--&gt;&lt;/div&gt;&lt;div&gt;Docker ne fonctionne nativement que sur Linux (du moins pour l'instant). Pour être plus précis, Docker fonctionne sur un modèle client-serveur où  l'outil de commande (client) marche sous Linux, Windows et MacOS et le  démon (serveur) ne fonctionne que sous Linux. Donc pour l'utiliser sur MacOS, ou d'autres systèmes encore plus exotiques, il faut installer ce démon dans une machine virtuelle. &lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://docs.docker.com/installation/mac/&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Docker on MacOS&quot; border=&quot;0&quot; height=&quot;320&quot; src=&quot;//1.bp.blogspot.com/-RZxtazh67ZQ/Vg6riXgejJI/AAAAAAAAGMI/INsbXRCb6gc/s320/mac_docker_host.png.png&quot; width=&quot;251&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;C'est ce que fait &lt;a href=&quot;http://boot2docker.io/&quot; target=&quot;_blank&quot;&gt;boot2docker&lt;/a&gt;. L'outil nous télécharge une machine virtuelle VirtualBox légère, qui embarque le démon docker. Il nous permet de la piloter cette VM, essentiellement pour la démarrer et l'arrêter. Sur MacOS, on peut télécharger l'&lt;i&gt;installer&lt;/i&gt; de boot2docker et l'installer manuellement, ou passer par &lt;a href=&quot;http://brew.sh/&quot; target=&quot;_blank&quot;&gt;Homebrew&lt;/a&gt;. &lt;/div&gt;&lt;pre class=&quot;brush:bash&quot;&gt;brew install docker&lt;br /&gt;brew install boot2docker&lt;br /&gt;&lt;/pre&gt;&lt;div style=&quot;background-color: #0691d0; color: white; font-size: x-large; line-height: 400%; margin: 10px 50px; text-align: center;&quot;&gt;&lt;b&gt;Mais ça, c'était avant.&lt;/b&gt;&lt;/div&gt;&lt;div&gt;Aujourd'hui, boot2docker est déprécié, au profit de &lt;a href=&quot;https://docs.docker.com/machine/&quot; target=&quot;_blank&quot;&gt;Docker Machine&lt;/a&gt;. &lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://www.docker.com/sites/default/files/products/docker_machine.png&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;https://www.docker.com/sites/default/files/products/docker_machine.png&quot; width=&quot;168&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;Le but de Docker Machine est plus vaste que boot2docker. Il est là pour installer Docker sur une machine distante et configurer notre client pour qu'il y accède. Par machine distante, on entend chez un des prestataires cloud supportés (Amazon AWS, Google Compute Engine, Digital Ocean,...) ou sur un moteur de virtualisation supporté (VirtualBox, VMware Fusion,...). Docker Machine avec son driver VirtualBox remplace donc boot2docker. &lt;/div&gt;&lt;div&gt;Là aussi, il y a deux façons de l'installer. La documentation officielle préconise d'utiliser la Docker Toolbox, qui contient aussi Docker, Docker Compose et Kitematic. Personnellement, je reste fidèle à &lt;a href=&quot;http://brew.sh/&quot; target=&quot;_blank&quot;&gt;Homebrew&lt;/a&gt;. &lt;/div&gt;&lt;pre class=&quot;brush:bash&quot;&gt;brew install docker-machine&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;En écoutant les &lt;a href=&quot;https://lescastcodeurs.com/&quot; target=&quot;_blank&quot;&gt;Cast Codeurs&lt;/a&gt;, j'ai découvert que Docker Toolbox était disponible avec &lt;a href=&quot;http://caskroom.io/&quot; target=&quot;_blank&quot;&gt;Homebrew Cask&lt;/a&gt; :&lt;br /&gt;&lt;pre class=&quot;brush:bash&quot;&gt;brew cask install dockertoolbox&lt;/pre&gt;Une fois que tout est installé, je peux créer ma VM. &lt;/div&gt;&lt;pre class=&quot;brush:bash&quot;&gt;docker-machine create -d virtualbox docker-vm&lt;br /&gt;eval &quot;$(docker-machine env docker-vm)&quot; &lt;/pre&gt;&lt;div&gt;Oui, mais si vous avez bien suivi, avant j'avais boot2docker, pour lequel j'avais déjà une VM avec plein d'images. Ce serait donc bien de récupérer tout ça. Et bien c'est prévu dans Docker Machine. &lt;/div&gt;&lt;pre class=&quot;brush:bash&quot;&gt;docker-machine create -d virtualbox --virtualbox-import-boot2docker-vm boot2docker-vm&lt;br /&gt;eval &quot;$(docker-machine env boot2docker-vm)&quot;&lt;/pre&gt;Les commandes ont un peu changé, au lieu de &lt;i&gt;up&lt;/i&gt; et &lt;i&gt;down,&lt;/i&gt; on a &lt;i&gt;start&lt;/i&gt; et &lt;i&gt;stop,&lt;/i&gt; ce qui est plus cohérent avec les commandes Docker. &lt;br /&gt;&lt;pre class=&quot;brush:bash&quot;&gt;docker-machine start&lt;br /&gt;docker-machine stop&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;div&gt;Il ne me reste plus qu'à désinstaller boot2docker. &lt;/div&gt;&lt;pre class=&quot;brush:bash&quot;&gt;boot2docker destroy&lt;br /&gt;brew remove boot2docker&lt;br /&gt;&lt;/pre&gt;&lt;span style=&quot;color: purple;&quot;&gt;&lt;i&gt;C'est fini...hum, c'est fini...&amp;nbsp;&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</content><author><name>Alexis Hassler</name></author><category term="boot2docker" /><category term="Docker Machine" /><category term="Docker" /><summary type="html">Eh oui, boot2docker, c'est fini. C'était sympa, tu m'as permis d'utiliser Docker là où ce n'était pas permis. Mais maintenant, tu dois laisser ta place à Docker Machine. Voilà, c'est fini. Ne sois jamais amère, reste toujours sincère. T'as eu c'que t'as voulu, même si t'as pas voulu c'que t'as eu.</summary></entry><entry><title type="html">Authentification Digest et chiffrement des mots de passe, avec Spring Security</title><link href="http://localhost:4000/2015/10/06/spring-boot-digest.html" rel="alternate" type="text/html" title="Authentification Digest et chiffrement des mots de passe, avec Spring Security" /><published>2015-10-06T10:37:00+02:00</published><updated>2015-10-06T10:37:00+02:00</updated><id>http://localhost:4000/2015/10/06/spring-boot-digest</id><content type="html" xml:base="http://localhost:4000/2015/10/06/spring-boot-digest.html">&lt;div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em; text-align: center;&quot;&gt;&lt;a href=&quot;http://www.troll.me/?p=263665&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;I don't always authenticate requests...&quot; border=&quot;0&quot; height=&quot;240&quot; src=&quot;//1.bp.blogspot.com/--mZ73EUw4jI/VmFnoUIUt_I/AAAAAAAAGVM/KGBh0hh-vN4/s320/i-dont-always-authenticate-requests-but-when-i-do-i-use-digest.jpg&quot; width=&quot;190&quot; /&gt;&lt;/a&gt;&lt;span id=&quot;goog_902735940&quot;&gt;&lt;/span&gt;&lt;span id=&quot;goog_902735941&quot;&gt;&lt;/span&gt;&lt;/div&gt;Récemment, j'ai voulu utiliser du &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;&lt;b&gt;Digest&lt;/b&gt;&lt;/a&gt; pour l'authentification à un service REST. J'ai préféré cette technique à Basic parce qu'elle est plus sécurisée. Et pour avoir un bon niveau de sécurité, j'ai aussi voulu chiffrer les mots de passe en base de données.  Là je me suis trouvé face à un problème : comment comparer un mot de passe &lt;i&gt;digéré&lt;/i&gt; et &lt;i&gt;salé&lt;/i&gt; dans en header de ma requête HTTP avec un mot de passe &lt;i&gt;digéré&lt;/i&gt; et &lt;i&gt;salé&lt;/i&gt; dans la base de données ? Et si c'est possible, comment le mettre en place avec &lt;a href=&quot;http://projects.spring.io/spring-security/&quot;&gt;&lt;b&gt;Spring Security&lt;/b&gt;&lt;/a&gt; et &lt;a href=&quot;http://projects.spring.io/spring-boot/&quot;&gt;&lt;b&gt;Spring Boot&lt;/b&gt;&lt;/a&gt; ? &lt;/div&gt;&lt;div&gt;Je vais donc reprendre ma configuration Spring Security au départ, avec une authentification Basic, puis passer à l'authentification Digest et voir comment la rendre compatible avec le chiffrement des mots de passe. &lt;br /&gt;&lt;!--more--&gt;&lt;/div&gt;&lt;h4&gt;Authentification Basic&lt;/h4&gt;&lt;div&gt;La configuration de Spring Security pour l'authentification Basic est extrêmement simple. On crée une classe de configuration qui hérite de &lt;a href=&quot;http://docs.spring.io/spring-security/site/docs/current/apidocs/org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html&quot;&gt;WebSecurityConfigurerAdapter&lt;/a&gt;, dans laquelle on redéfinit les méthodes &lt;code&gt;configure(AuthenticationManagerBuilder builder)&lt;/code&gt; et &lt;code&gt;configure(HttpSecurity http)&lt;/code&gt; : &lt;/div&gt;&lt;pre class=&quot;brush:java&quot;&gt;@Configuration&lt;br /&gt;public class BasicSecurityConfig extends WebSecurityConfigurerAdapter {&lt;br /&gt;&lt;br /&gt;    @Override&lt;br /&gt;    protected void configure(AuthenticationManagerBuilder builder) throws Exception {&lt;br /&gt;        builder.userDetailsService(userDetailsService());&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    @Override&lt;br /&gt;    protected void configure(HttpSecurity http) throws Exception {&lt;br /&gt;        http.httpBasic()&lt;br /&gt;                .and()&lt;br /&gt;            .authorizeRequests()&lt;br /&gt;                .anyRequest().authenticated();&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Pour tester cette configuration, j'ai créé un service REST tout simple, qui répond OK si la requête fournit les bonnes informations d'authentification. &lt;/div&gt;&lt;pre class=&quot;brush:java&quot;&gt;@RestController&lt;br /&gt;public class PingController {&lt;br /&gt;&lt;br /&gt;    @RequestMapping(value = &quot;/ping&quot;)&lt;br /&gt;    Answer ping() {&lt;br /&gt;        return new Answer();&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    @JacksonXmlRootElement(localName = &quot;answer&quot;)&lt;br /&gt;    public static class Answer {&lt;br /&gt;        @JacksonXmlText @JsonProperty(&quot;answer&quot;)&lt;br /&gt;        public String value = &quot;OK&quot;;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;On peut utiliser n'importe quel client HTTP pour tester : &lt;a href=&quot;https://www.blogger.com/curl.haxx.se&quot;&gt;curl&lt;/a&gt;, &lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt;, un &lt;a href=&quot;http://www.getfirefox.net/&quot;&gt;navigateur&lt;/a&gt;,... Pour ma part, j'ai choisi &lt;a href=&quot;http://httpie.org/&quot;&gt;httpie&lt;/a&gt;. &lt;/div&gt;&lt;pre class=&quot;brush:bash&quot;&gt;http --auth-type=basic --auth=user:pwd http://localhost:8080/ping&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Dans cet exemple, les mots de passe sont stockés en clair. Il est plus prudent de les stocker après hachage. Du coté de Spring Security, il suffit d'ajouter un &lt;a href=&quot;http://docs.spring.io/spring-security/site/docs/current/apidocs/org/springframework/security/crypto/password/PasswordEncoder.html&quot;&gt;PasswordEncoder&lt;/a&gt;. &lt;/div&gt;&lt;h4&gt;Authentification Digest&lt;/h4&gt;&lt;div&gt;L'authentification Digest est un peu plus complexe que Basic car elle se fait en deux étapes. A la première requête, le serveur envoie une réponse 401 et un header WWW-Authenticate avec le nonce. Le client renvoie une deuxième requête avec le mot de passe haché et salé en utilisant le nonce fourni par le serveur.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-u7coEa0P9OY/VhNx2nFvbjI/AAAAAAAAGNc/peFpEwwisvA/s1600/spring-digest.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;//2.bp.blogspot.com/-u7coEa0P9OY/VhNx2nFvbjI/AAAAAAAAGNc/peFpEwwisvA/s1600/spring-digest.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;div&gt;Avec Spring Security, pour passer le même exemple en Digest, il faut remplacer httpBasic() par deux éléments : un AuthenticationEntryPoint et un Filter. &lt;/div&gt;&lt;pre class=&quot;brush:java&quot;&gt;    @Override&lt;br /&gt;    protected void configure(HttpSecurity http) throws Exception {&lt;br /&gt;        ...&lt;br /&gt;&lt;br /&gt;        http.addFilter(filter)&lt;br /&gt;            .exceptionHandling().authenticationEntryPoint(authenticationEntryPoint)&lt;br /&gt;                .and()&lt;br /&gt;            .authorizeRequests()&lt;br /&gt;                .anyRequest().authenticated();&lt;br /&gt;    }&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Le &lt;a href=&quot;http://docs.spring.io/spring-security/site/docs/current/apidocs/org/springframework/security/web/authentication/www/DigestAuthenticationEntryPoint.html&quot;&gt;DigestAuthenticationEntryPoint&lt;/a&gt; de Spring Security génère le nonce et construit la réponse 401. Le &lt;a href=&quot;http://docs.spring.io/spring-security/site/docs/current/apidocs/org/springframework/security/web/authentication/www/DigestAuthenticationFilter.html&quot;&gt;DigestAuthenticationFilter&lt;/a&gt; intercepte la seconde requête et compare le contenu du header Digest au mot de passe stocké. &lt;/div&gt;&lt;pre class=&quot;brush:java&quot;&gt;        DigestAuthenticationEntryPoint authenticationEntryPoint = new DigestAuthenticationEntryPoint();&lt;br /&gt;        authenticationEntryPoint.setKey(&quot;sewatech&quot;);&lt;br /&gt;        authenticationEntryPoint.setRealmName(&quot;example&quot;);&lt;br /&gt;&lt;br /&gt;        DigestAuthenticationFilter filter = new DigestAuthenticationFilter();&lt;br /&gt;        filter.setAuthenticationEntryPoint(authenticationEntryPoint);&lt;br /&gt;        filter.setUserDetailsService(userDetailsService());&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Pour tester : &lt;/div&gt;&lt;pre class=&quot;brush:bash&quot;&gt;http --auth-type=digest --auth=user:pwd http://localhost:8080/ping&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Contrairement au Basic, si j'ajoute un PasswordEncoder, l'authentification ne fonctionne plus. &lt;/div&gt;&lt;h4&gt;Chiffrement des mots de passe&lt;/h4&gt;&lt;div&gt;Regardons plus en détail pourquoi ça ne fonctionne plus si je hache mes mots de passe... &lt;/div&gt;&lt;div&gt;En digest, les informations d'authentification sont hachées en MD5, salées avec le nonce, avant d'être passées au serveur. En utilisant un PasswordEncoder, j'ai aussi haché et salé les mots de passe stockées. Comme ces opérations sont irréversibles et qu'elles n'ont aucune propriété de transitivité, je ne peux plus comparer les informations transmises avec les informations stockées. &lt;/div&gt;&lt;div&gt;La première solution serait de ne pas hacher du tout les mots de passe. Mais c'est prendre des risques en cas de vol de données. Même les chiffrer de façon réversible serait une protection un peu légère. Je préfère abandonner Digest pour Basic + SSL, si ça me permet de protégée les mots de passe. &lt;/div&gt;&lt;div&gt;Pour trouver une meilleure solution, il faut s'attarder sur la formule de hachage en Digest. Il existe plusieurs niveaux de complexité, avec des options (quality of protection, client nonce) qui ne changent pas fondamentalement le principe. Pour l'exemple, on va partir sur la version la plus simple, dans laquelle le hachage du header se fait sur la formule suivant : &lt;/div&gt;&lt;pre&gt;    H(A1)=MD5(username:realm:password)&lt;br /&gt;    H(A2)=MD5(method:digestURI)&lt;br /&gt;    response=MD5(H(A1):nonce:H(A2)) &lt;br /&gt;&lt;/pre&gt;&lt;div&gt;D'après cette formule, si on stocke coté serveur la valeur de H(A1), c'est à dire &lt;code&gt;MD5(username:realm:password)&lt;/code&gt;, on peut recalculer la valeur attendue pour &lt;code&gt;response&lt;/code&gt;. &lt;/div&gt;&lt;div&gt;Évidemment, Spring Security a prévu une option pour ça. Il suffit donc de l'activer et de stocker les mots de passes en version hachée. Par contre, il n'y a pas besoin de PasswordEncoder. &lt;/div&gt;&lt;pre class=&quot;brush:java&quot;&gt;        DigestAuthenticationFilter filter = new DigestAuthenticationFilter();&lt;br /&gt;        ...&lt;br /&gt;        filter.setPasswordAlreadyEncoded(true);&lt;/pre&gt;&lt;div&gt;J'invite les plus curieux à lire les détails dans la &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot; target=&quot;_blank&quot;&gt;RFC 2617 - HTTP Authentication: Basic and Digest Access Authentication&lt;/a&gt;, ils verront que j'ai pris quelques raccourcis avec ma formule.&lt;/div&gt;&lt;h4&gt;Conclusion&lt;/h4&gt;&lt;div&gt;Il est donc possible d'utiliser une authentification Digest avec un stockage haché des mots de passe. Par contre, le mode de hachage est limité, et bien moins sûr qu'en bcrypt. &lt;/div&gt;&lt;div&gt;Le code source de&amp;nbsp; l'exemple est publié sur mon compte &lt;a href=&quot;https://github.com/hasalex/spring-security-example&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;. N'hésitez pas à jouer avec, et à me proposer des améliorations. &lt;/div&gt;</content><author><name>Alexis Hassler</name></author><category term="Digest" /><category term="Spring Security" /><category term="Spring Boot" /><category term="Spring" /><summary type="html">Récemment, j'ai voulu utiliser du Digest pour l'authentification à un service REST. J'ai préféré cette technique à Basic parce qu'elle est plus sécurisée. Et pour avoir un bon niveau de sécurité, j'ai aussi voulu chiffrer les mots de passe en base de données. Là je me suis trouvé face à un problème : comment comparer un mot de passe digéré et salé dans en header de ma requête HTTP avec un mot de passe digéré et salé dans la base de données ? Et si c'est possible, comment le mettre en place avec Spring Security et Spring Boot ? Je vais donc reprendre ma configuration Spring Security au départ, avec une authentification Basic, puis passer à l'authentification Digest et voir comment la rendre compatible avec le chiffrement des mots de passe.</summary></entry><entry><title type="html">Découverte de CompletableFuture</title><link href="http://localhost:4000/2015/09/30/completablefuture.html" rel="alternate" type="text/html" title="Découverte de CompletableFuture" /><published>2015-09-30T15:23:00+02:00</published><updated>2015-09-30T15:23:00+02:00</updated><id>http://localhost:4000/2015/09/30/completablefuture</id><content type="html" xml:base="http://localhost:4000/2015/09/30/completablefuture.html">&lt;div&gt;La classe &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html&quot; target=&quot;_blank&quot;&gt;CompletableFuture&lt;/a&gt; fait partie des nouveautés de Java 8, dans le package java.util.concurrent. Dans un premier temps, je n’y ai pas beaucoup prêté attention, parce que j’avais assez à faire pour prendre en main les lambdas et l’API Stream, et aussi parce que je trouvais sa javadoc assez confuse. &lt;/div&gt;&lt;div&gt;Récemment, je suis tombé sur &lt;a href=&quot;http://www.nurkiewicz.com/&quot; target=&quot;_blank&quot;&gt;NoBlogDefFound&lt;/a&gt; où Tomasz Nurkiewicz explique plein de choses sur les classes de concurrence de Java SE. Plusieurs articles traitent de CompletableFuture et ça m’a bien éclairé sur le sujet. Je vais essayer de résumer ce que j’en ai compris et ce qui m’a plu. &lt;br /&gt;&lt;!--more--&gt;&lt;/div&gt;&lt;h4&gt;Future&lt;/h4&gt;&lt;div&gt;Tout d’abord, CompletableFuture implémente &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Future.html&quot; target=&quot;_blank&quot;&gt;Future&lt;/a&gt;, ce qui signifie qu’on peut l’utiliser pour lancer une tâche et récupérer un résultat plus tard avec la méthode get(). &lt;/div&gt;&lt;h4&gt;CompletableFuture vide&lt;/h4&gt;&lt;div&gt;Evidemment, pour que ça ait un intérêt, CompletableFuture est un future avec quelques petites choses en plus… comme par exemple d’être &lt;i&gt;completable&lt;/i&gt;, c’est à dire qu'on peut le démarrer sans lui associer de tâche et qu’on peut le terminer explicitement. &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;CompletableFuture&amp;lt;Integer&amp;gt; future = new CompletableFuture&amp;lt;&amp;gt;()&lt;br /&gt;future.complete(42)&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;On peut utiliser CompletableFuture à la place de CountdownLatch : plusieurs threads se mettent en attente en appelant future.&lt;b&gt;get()&lt;/b&gt; et on les libère en appelant future.&lt;b&gt;complete()&lt;/b&gt;. En bonus par rapport à CountdownLatch, on passe un objet en paramètre qui sera récupéré par les threads. &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;CompletableFuture&amp;lt;Integer&amp;gt; future = new CompletableFuture&amp;lt;&amp;gt;()&lt;br /&gt;launchThreads(future);&lt;br /&gt;future.complete(42);&lt;br /&gt;System.out.println(&quot;Done with value &quot; + future.getNow(0))&amp;lt;;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;La méthode launchThreads démarre des threads et appelle future.get(). &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;new Thread(() -&amp;gt; {&lt;br /&gt;  try {&lt;br /&gt;    Integer value = future.get();&lt;br /&gt;    System.out.println(&quot;Thread &quot; + threadNumber + &quot; : &quot; + value);&lt;br /&gt;  } catch (Exception e) {&lt;br /&gt;    ...&lt;br /&gt;  }&lt;br /&gt;}).start();&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;On peut aussi envoyer une exception. &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;future.completeExceptionally(new RuntimeException(&quot;Arghh&quot;));&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Elle sera récupérée dans une ExecutionException : &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;try {&lt;br /&gt;    Integer value = future.get();&lt;br /&gt;    System.out.println(&quot;Thread &quot; + threadNumber + &quot; : &quot; + value);&lt;br /&gt;} catch (ExecutionException e) {&lt;br /&gt;    ...&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;L’appel de get peut être remplacé par &lt;b&gt;join&lt;/b&gt;. Dans ce cas, on ne doit pas gérer des exceptions checked et ExecutionException est remplacée par CompletionException, qui est une RuntimeException. &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;new Thread(() -&amp;gt; {&lt;br /&gt;    Integer value = future.join();&lt;br /&gt;    System.out.println(&quot;Thread &quot; + threadNumber + &quot; : &quot; + value);&lt;br /&gt;}).start();&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Bref, c’est comme un Future, mais avec des méthodes &lt;b&gt;complete&lt;/b&gt;, et une méthode &lt;b&gt;join&lt;/b&gt; plus pratique que get. &lt;/div&gt;&lt;h4&gt;CompletableFuture, Runnable et lambda&lt;/h4&gt;&lt;div&gt;On peut aussi créer un CompletableFuture à partir d’un Runnable, comme on le faisait déjà avec FutureTask, sauf que, comme les constructeurs sont moins à la mode, on utilise une méthode de fabrique runAsync(Runnable). Et contrairement à FutureTask, on n’a pas de variante avec Callable. A la place, on a une méthode supplyAsync(Supplier&amp;lt;U&amp;gt; supplier), ce qui revient strictement au même si on utilise les expressions lambda. &lt;/div&gt;&lt;h4&gt;CompletionStage&lt;/h4&gt;&lt;div&gt;Le principal intérêt de CompletableFuture, c’est qu’on peut facilement enchainer les tâches. Ce sont les méthodes définies dans l’interface &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html&quot; target=&quot;_blank&quot;&gt;CompletionStage&lt;/a&gt; qui permettent ça. C’est sympa, ça ressemble à la programmation avec les streams, ou avec un Optional, à la différence prêt qu’ici on est en mode asynchrone. &lt;/div&gt;&lt;div&gt;&lt;b&gt;thenApply&lt;/b&gt; applique une fonction et renvoie un nouveau CompletableFuture, avec un nouveau type de valeur. &lt;b&gt;thenAccept&lt;/b&gt; applique un consommateur et renvoie un CompletableFuture sans valeur (&amp;lt;Void&amp;gt;). &lt;b&gt;thenRun&lt;/b&gt; execute un Runnable ; ces variantes avec Runnable existent pour la plupart des fonctionnalités de CompletableFuture, mais pour alléger le billet je n’en parlerai plus. &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;CompletableFuture&amp;lt;Integer&amp;gt; future = start&lt;br /&gt;      .thenApply(val -&amp;gt; val + 1)&lt;br /&gt;      .thenApply(val -&amp;gt; 2 * val);&lt;br /&gt;&lt;br /&gt;future.thenApply(val -&amp;gt; &quot;Accepted &quot; + val)&lt;br /&gt;      .thenAccept(System.out::println);&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Toutes ces méthodes thenXxx ont trois variantes : la simple qui s’exécute dans le même thread, async qui s’exécute dans le common pool et async avec un executor. &lt;/div&gt;&lt;div&gt;&lt;b&gt;thenCompose&lt;/b&gt; est un peu le flatMap de CompletableFuture. Il utilise une fonction qui reçoit le résultat du CompletableFuture et renvoie un nouveau CompletableFuture. C’est un peu comme thenApply avec lequel on construit soi-même le nouveau CompletableFuture. &lt;/div&gt;&lt;h4&gt;Combinaison de CompletableFuture&lt;/h4&gt;&lt;div&gt;Il y a deux façons de combiner des CompletableFuture : prendre celui qui se termine en premier, ou celui qui se termine en dernier. &lt;/div&gt;&lt;div&gt;La méthode statique &lt;b&gt;allOf&lt;/b&gt; prend un ensemble de CompletableFuture pour en faire un nouveau qui rendra la main lorsque tous seront terminés. Ça fonctionne comme une Barrier. La méthode &lt;b&gt;thenCombine&lt;/b&gt; fait presque la même chose, avec seulement deux futures et avec une fonction qui combine les deux résultats. &lt;b&gt;thenAcceptBoth&lt;/b&gt; fait aussi la même chose, mais en consommant les deux résultats, sans fournir de nouveau résultat. &lt;/div&gt;&lt;div&gt;Avec &lt;b&gt;anyOf&lt;/b&gt;, la main sera rendue au premier terminé. La méthode &lt;b&gt;applyToEither&lt;/b&gt; fait presque la même chose, avec seulement deux futures mais en ajoutant une transformation. &lt;b&gt;applyEither&lt;/b&gt; fait la même chose en consommant le résultat, sans valeur de retour. &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;anyOf(future1, future2)&lt;br /&gt;        .thenApply(val -&amp;gt; &quot;Done with anyOf &quot; + val)&lt;br /&gt;        .thenAccept(System.out::println);&lt;br /&gt;&lt;/pre&gt;&lt;h4&gt;Gestion des erreurs&lt;/h4&gt;&lt;div&gt;La méthode &lt;b&gt;exceptionally&lt;/b&gt; est appelée lorsqu’un CompletableFuture se termine en exception ; elle peut être utilisée de deux façons. &lt;/div&gt;&lt;div&gt;On peut enchainer des then après la prise en compte de l’exception. &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;future.exceptionally(ex -&amp;gt; ...)&lt;br /&gt;      .thenApply(val -&amp;gt; ...);&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Dans ce cas, exceptionally intercepte l’exception et renvoie un nouveau CompletableFuture avec une valeur qui sera transmise à thenApply. &lt;/div&gt;&lt;div&gt;Par contre, si on appelle exceptionally sans enchainer, sa valeur de retour est perdu (on peut mettre null). &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;future.exceptionally(ex -&amp;gt; ...);&lt;br /&gt;future.thenApply(val -&amp;gt; ...);&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Dans notre exemple, thenApply n’est pas appelé en cas d’exception. On a simulé un try - catch dans un CompletableFuture, et pour respecter l’ordre (try puis catch), on peut aussi échanger les deux lignes sans changer le comportement. &lt;/div&gt;&lt;pre class=&quot;brush: java&quot;&gt;future.thenApply(val -&amp;gt; ...);&lt;br /&gt;future.exceptionally(ex -&amp;gt; ...);&lt;br /&gt;&lt;/pre&gt;&lt;h4&gt;Conclusions&lt;/h4&gt;&lt;div&gt;Je confirme ma première impression : je ne trouve toujours pas cette classe très lisible. Il y a beaucoup de choses pour une seule classe (7 méthodes statiques, un cinquantaine de méthodes d’instance).  &lt;/div&gt;&lt;div&gt;Je ne vois toujours pas très bien l'intérêt d'avoir au même endroit l'aspect &lt;i&gt;complete&lt;/i&gt; et le coté &lt;i&gt;reactive-like&lt;/i&gt;, d'autant que le nom insiste sur la première fonctionnalité qui ne me semble pas la plus importante. Est-ce que ça n'aurait pas pu être dans des classes, ou au moins des interfaces, différentes ? Guava a bien fait une distinction entre &lt;a href=&quot;http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/util/concurrent/ListenableFuture.html&quot; target=&quot;_blank&quot;&gt;ListenableFuture&lt;/a&gt; et &lt;a href=&quot;http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/util/concurrent/SettableFuture.html&quot; target=&quot;_blank&quot;&gt;SettableFuture&lt;/a&gt;.  &lt;/div&gt;&lt;div&gt;Et puis, l’API n’est pas très cohérente. Par exemple, &lt;b&gt;getNow&lt;/b&gt; ne renvoie pas les mêmes exceptions que &lt;b&gt;get,&lt;/b&gt; mais les mêmes que &lt;b&gt;join&lt;/b&gt;. Pourquoi ne pas l’appeler joinNow ?  Et que dire de la méthode &lt;b&gt;allOf&lt;/b&gt; est qui ne renvoie pas de valeur. Et du piège tendu par la méthode &lt;b&gt;&lt;a href=&quot;http://www.nurkiewicz.com/2015/03/completablefuture-cant-be-interrupted.html&quot; target=&quot;_blank&quot;&gt;cancel&lt;/a&gt;&lt;/b&gt; qui n'a pas le même comportement que pour les autres Future ?  &lt;/div&gt;&lt;div&gt;Malgré tout, &lt;b&gt;CompletableFuture&lt;/b&gt; est bien plus intéressante que je ne pensais au départ, à condition de connaitre et savoir utiliser les expressions lambda pour l'exploiter correctement. Avec ça, notre code peut prendre des allures &lt;i&gt;Reactive&lt;/i&gt;. D'ailleurs, on peut trouver quelques similitudes avec la classe &lt;a href=&quot;http://reactivex.io/documentation/observable.html&quot; target=&quot;_blank&quot;&gt;Observable&lt;/a&gt; de &lt;a href=&quot;https://github.com/ReactiveX/RxJava/&quot; target=&quot;_blank&quot;&gt;RxJava&lt;/a&gt;. Pour la peine, je vais ajouter un paragraphe sur le sujet dans ma toute nouvelle formation &quot;&lt;a href=&quot;http://www.sewatech.fr/formation-java-threads.html&quot; target=&quot;_blank&quot;&gt;Programmation parallèle et concurrente en Java&lt;/a&gt;&quot;.&lt;/div&gt;&lt;div&gt;Je l'ai déjà signalé en introduction, Tomasz Nurkiewicz dit des choses bien plus intéressantes et plus approfondies, alors n’hésitez pas à consulter les &lt;a href=&quot;http://www.nurkiewicz.com/search?q=CompletableFuture&quot; target=&quot;_blank&quot;&gt;articles originaux&lt;/a&gt;.&lt;/div&gt;</content><author><name>Alexis Hassler</name></author><category term="CompletableFuture" /><category term="Concurrent" /><summary type="html">La classe CompletableFuture fait partie des nouveautés de Java 8, dans le package java.util.concurrent. Dans un premier temps, je n’y ai pas beaucoup prêté attention, parce que j’avais assez à faire pour prendre en main les lambdas et l’API Stream, et aussi parce que je trouvais sa javadoc assez confuse. Récemment, je suis tombé sur NoBlogDefFound où Tomasz Nurkiewicz explique plein de choses sur les classes de concurrence de Java SE. Plusieurs articles traitent de CompletableFuture et ça m’a bien éclairé sur le sujet. Je vais essayer de résumer ce que j’en ai compris et ce qui m’a plu.</summary></entry></feed>